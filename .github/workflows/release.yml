name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on any tag beginning with "v"

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # so GoReleaser can access full history if needed

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'  # Set desired Go version here

      - name: Install dependencies for cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            tar \
            wget \
            git \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            gcc-multilib \
            g++-multilib

      - name: Install osxcross
        run: |
          # Dependencies for osxcross
          sudo apt-get install -y \
            clang \
            llvm-dev \
            libxml2-dev \
            uuid-dev \
            libssl-dev \
            bash \
            patch \
            make \
            tar \
            xz-utils \
            bzip2 \
            gzip \
            sed \
            cpio \
            libbz2-dev

          # Clone osxcross
          git clone https://github.com/tpoechtrager/osxcross
          cd osxcross

          # Download macOS SDK (example: 12.3)
          wget -q https://github.com/joseluisq/macosx-sdks/releases/download/12.3/MacOSX12.3.sdk.tar.xz -O tarballs/MacOSX12.3.sdk.tar.xz

          # Build osxcross (this can take some time)
          UNATTENDED=1 ./build.sh

          # Add osxcross toolchain to PATH
          echo "$PWD/target/bin" >> $GITHUB_PATH

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Force CGO on for the entire run; individual builds also set CGO_ENABLED=1
          CGO_ENABLED: 1
          # Prepend osxcross binaries to PATH so that o64-clang, oa64-clang, etc. are found
          PATH: /usr/lib/ccache:/usr/local/opt/ccache/libexec:${{ github.workspace }}/osxcross/target/bin:${{ env.PATH }}
